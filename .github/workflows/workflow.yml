name: Main workflow
on: [push, pull_request]
jobs:
  build:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        operating-system: [ubuntu-latest, macos-latest]
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup Node.js 12
      uses: actions/setup-node@v1
      with:
        node-version: 12.x
    - name: npm install
      run: npm install
    - name: Lint
      run: npm run format-check
    - name: npm test
      run: npm test

  test:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        operating-system: [ubuntu-latest, macos-latest]
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Clear tool cache
      if: runner.os != 'windows'
      run: mv "${{ runner.tool_cache }}" "${{ runner.tool_cache }}.old"
    - name: Clear tool cache (Windows)
      if: runner.os == 'windows'
      run: move "${{ runner.tool_cache }}" "${{ runner.tool_cache }}.old"
    - name: Setup Java 8 Zulu
      id: setup-java8
      uses: ./
      with:
        java-version: 8.0.272-zulu
    - name: Verify Java 8
      run: >
        cd __tests__ && javac VerifyJava.java &&
        java VerifyJava 1.8.0_272 "Azul Systems, Inc."
        "${{ steps.setup-java8.outputs.path }}" "${{ steps.setup-java8.outputs.version }}"
        8.0.272-zulu
    - name: Verify sdk command reports Java 8
      run: __tests__/verify-java.sh "$(${{ steps.setup-java8.outputs.sdkCommand }} current java)" 8.0.272-zulu
    - name: Setup Java 11 OpenJDK
      id: setup-java11
      uses: ./
      with:
        java-version: 11.0.2-open
    - name: Verify Java 11
      run: >
        cd __tests__ && javac VerifyJava.java &&
        java VerifyJava 11.0.2 "Oracle Corporation"
        "${{ steps.setup-java11.outputs.path }}" "${{ steps.setup-java11.outputs.version }}"
        11.0.2-open
    - name: Verify sdk command reports Java 11
      run: __tests__/verify-java.sh "$(${{ steps.setup-java11.outputs.sdkCommand }} current java)" 11.0.2-open
